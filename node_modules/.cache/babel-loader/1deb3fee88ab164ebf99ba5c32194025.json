{"ast":null,"code":"var _jsxFileName = \"/home/hemant/Desktop/projects/covid19_tracker_website/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        labels: 'Infected',\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        labels: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [' Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0,0,255,0.5', 'rgba(0,255,0,0.5)', 'rgb(255, 0,0,0.5)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State is ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/hemant/Desktop/projects/covid19_tracker_website/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","borderColor","fill","backgroundColor","barChart","label","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAuC,OAAvC;AAEA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,SAAQC,cAAR,QAA6B,WAA7B;AAGA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAC,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAP;AAAwCC,EAAAA;AAAxC,CAAD,KAAqD;AAC7D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEJC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAG,YAAS;AACvBD,MAAAA,YAAY,CAAC,MAAMT,cAAc,EAArB,CAAZ;AACF,KAFD;;AAMAU,IAAAA,QAAQ;AACX,GARQ,EAQN,EARM,CAAT;AAWA,QAAMC,SAAS,GACbH,SAAS,CAAC,CAAD,CAAT,gBACA,oBAAC,IAAD;AACC,IAAA,IAAI,EAAE;AACFI,MAAAA,MAAM,EAACJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAaA,IAA3B,CADL;AAGFC,MAAAA,QAAQ,EAAG,CAAC;AACVZ,QAAAA,IAAI,EAAEK,SAAS,CAACK,GAAV,CAAeV,IAAD,IAAUA,IAAI,CAACC,SAA7B,CADI;AAEVQ,QAAAA,MAAM,EAAE,UAFE;AAGVI,QAAAA,WAAW,EAAC,SAHF;AAIVC,QAAAA,IAAI,EAAC;AAJK,OAAD,EAKP;AACHd,QAAAA,IAAI,EAAEK,SAAS,CAACK,GAAV,CAAeV,IAAD,IAAUA,IAAI,CAACG,MAA7B,CADH;AAEHM,QAAAA,MAAM,EAAE,QAFL;AAGHI,QAAAA,WAAW,EAAC,KAHT;AAIHE,QAAAA,eAAe,EAAE,mBAJd;AAKHD,QAAAA,IAAI,EAAC;AALF,OALO;AAHT,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAmBO,IApBT;AAuBA,QAAME,QAAQ,GACVf,SAAS,gBAEL,oBAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACJQ,MAAAA,MAAM,EAAE,CAAC,WAAD,EAAa,WAAb,EAA2B,QAA3B,CADJ;AAEJG,MAAAA,QAAQ,EAAE,CAAC;AACPK,QAAAA,KAAK,EAAC,QADC;AAEPF,QAAAA,eAAe,EAAC,CACZ,kBADY,EAEZ,mBAFY,EAGZ,mBAHY,CAFT;AAOPf,QAAAA,IAAI,EAAC,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB;AAPE,OAAD;AAFN,KADN;AAaA,IAAA,OAAO,EAAE;AACLe,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADH;AAELC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAG,IAAX;AAAiBE,QAAAA,IAAI,EAAE,oBAAmBjB,OAAQ;AAAlD;AAFD,KAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAoBL,IArBR;AA0BI,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,OAAO,GAAEY,QAAF,GAAaR,SADzB,CADJ;AAKH,CApED;;AAsEA,eAAeT,KAAf","sourcesContent":["import React,{useState, useEffect}from 'react';\n\nimport {Line, Bar} from 'react-chartjs-2'\nimport {fetchDailyData} from '../../api'\n\n\nimport styles from './Chart.module.css'\n\nconst Chart=({data :{confirmed, recovered ,deaths} , country}) =>{\n    const [dailyData, setDailyData] = useState({});\n\nuseEffect(()=>{\n    const fetchAPI = async()=>{\n       setDailyData(await fetchDailyData())\n    }\n\n\n\n    fetchAPI()\n}, [])\n\n\nconst lineChart=(\n  dailyData[0]?(\n  <Line \n   data={{\n       labels:dailyData.map(({ date}) => date),\n      \n       datasets : [{\n         data: dailyData.map((data) => data.confirmed),\n         labels: 'Infected',\n         borderColor:\"#3333ff\",\n         fill:true,\n       } , {\n        data: dailyData.map((data) => data.deaths),\n        labels: \"Deaths\",\n        borderColor:\"red\",\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill:true,\n\n       }],\n   }}\n   />) : null\n)\n\nconst barChart =(\n    confirmed\n    ?(\n        <Bar \n        data={{\n          labels: [' Infected','Recovered' , 'Deaths'],\n          datasets: [{\n              label:'People',\n              backgroundColor:[\n                  'rgba(0,0,255,0.5',\n                  'rgba(0,255,0,0.5)',\n                  'rgb(255, 0,0,0.5)',\n              ],\n              data:[confirmed, recovered ,deaths]\n          }]\n        }}\n        options={{\n            legend: {display: false},\n            title:{display : true, text:`Current State is ${country}`}\n        }}\n        />\n    ) : null\n)\n\n\n\n    return(\n        <div className={styles.container}> \n            {country? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}